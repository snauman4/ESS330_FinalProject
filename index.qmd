---
title: Differing Water Quality in Protected and Unprotected U.S. Southwest River Basins
authors:
  - name: Samantha Nauman, Madison Schartz, Hanna Velicer
    affiliation: Colorado State University
    roles: writing
    corresponding: true
bibliography: references.bib
execute: 
  echo: true
---
# Introduction

Water quality is currently one of the most pressing environmental challenges across the globe, directly impacting both ecosystem and human health, along with biodiversity. Looking specifically at Colorado, there are growing concerns over the state of local river systems due to increased runoff and nutrient pollution (@ator2022effects). These concerns call for a better understanding of how protection policies could help mitigate threats to water quality. While some laws and frameworks are in place to control pollution and other harmful factors, these protections vary in their ability to truly protect aquatic ecosystems. Conducting research on river systems is crucial for aiding in conservation policy, especially with increasing urbanization, climate change, and ongoing pollution. 

River ecosystems serve as habitat for many organisms and also provide economic resources. Despite this, they continue to be threatened by anthropogenic activities like agriculture and industrial development. To combat these threats, protected area frameworks like the National Parks have been introduced to preserve these ecosystems from further harm. The study region for this project is the Southwestern United States where there are multiple protected and unprotected areas., with four of our ten sites being in Colorado specifically. The selected river systems to pull both protected and unprotected site data from are the Cache la Poudre River here in Fort Collins, the Colorado River in Mesa County, CO near the CO-UT state line, the Santa Margarita River  near Temecula, California, the Verde River below Bartlett Dam, AZ, and the Green River in Jensen, Utah. Many of these river systems flow through wilderness in addition to more developed, urban areas. Using two sites along the same river system will allow us to see water quality measurements taken over a 45-year span and see how the quality has changed over time in relatively similar conditions. This contrast will allow for a direct comparison to see how protection status affects water quality trends.

The topic of this project was driven by a growing appreciation for data-based policy and its increasing importance for environmental protection. By looking at rivers with both protected and unprotected areas, we hope to pinpoint the true effects that protective status has on water quality. Additionally, by analyzing more than four decades of data, 1975 to 2024, we will be able to spot long-term trends rather than random deviations. Our motivation for this topic initially originated from the local significance of the Cache la Poudre River. Being Colorado State University undergraduate students in the Warner College of Natural Resources, we recognize the ecological importance and impact that specific river system has on the surrounding areas. It is an essential water source for agriculture and also home to the local biodiversity, including both aquatic and riparian species. We then decided to expand our analysis to more river systems in the Southwestern United States to get more substanial results. Comparing different areas in the same river systems in this project provides the opportunity to see how protection status affects ecosystems against human and environmental impacts on a more local level. 

To conduct our analysis, we will use publicly available data from U.S. Geological Survey (USGS). We will be focusing on three variables for this project: discharge flow rate, water temperature, and pH. We believe that combined, these three will give us an accurate evaluation of each site’s water quality over time. In this project, we will be testing the hypothesis that areas designated as “protected,” due to endangered species, their location, etc., have stronger safeguards against various environmental stressors (ie pollution) than areas with no “protected” designation, leading to better water quality. We aim to test this hypothesis by looking at long-term trends in discharge, water temperature, and pH, as well as conducting various statistical tests to determine statistical significance of the variables at each protected and unprotected site. 

# Methods

As mentioned above, this study aims to examine whether environmental protection influences water quality within river systems across the Southwest River Basins. We began our project by visiting the USGS spatial map on protected and unprotected areas within our study region to identify our lucky 10 sites. We then went to the USGS National Water Information System for our various water quality data described above in our introduction section. From this information we were able to select our ten monitoring sites, five in protected areas and five in unprotected areas, across five major river systems: the Cache la Poudre River (CO), Colorado River (CO), Santa Margarita River (CA),  Verde River (AZ), and the Green River (UT). These rivers were chosen for their varied geography, passage through both wilderness and urban environments, and ability to have accessible water quality data, allowing us to compare relatively similar ecological conditions within different protection statuses. 

In addition to spatial comparisons, we will also use temporal analysis to look for long-term trends in discharge flow rates, water temperature, and pH levels. Our sites span a temporal range of up to 50 years, with our scope set between 1975-10-01 (water year 1976) to 2024-10-01 (beginning of water year 2025), with water quality measurements available from the USGS National Water Information System. All ten sites were selected to represent a mix of protected and unprotected conditions with one site for each condition per river source for comparative analysis and can be found on the USGS dashboard as follows: 

- *Protected Site (CO):* USGS 06752260, is located along the Cache la Poudre River in Fort Collins, CO, at an elevation of 4,940 feet, and is part of the National Wild and Scenic River with a drainage area of 1,128 sq miles.

- *Unprotected Site (CO):* USGS 09034250, Colorado River at Windy Gap near Granby, CO (Cache la Poudre flows into CO River - connection to unprotected Poudre site), at an elevation of 7,790 feet with a drainage area of 788 sq miles.

- *Protected Site (CO):* USGS 09163500, is located near the Colorado-Utah state line on the Colorado River in Mesa County, CO, at an elevation of 4, 325 feet, and is a part of the McInnis Canyon National Conservation Area, with a drainage area 17,849 sq miles.

- *Unprotected Site (CO):* USGS 09147500, is located on the Uncompahgre River in Colona, Ouray County, CO, at an elevation of 6,320 feet, and is not associated with any environmental protection, with a drainage area of 448 sq miles.

- *Protected Site (CA):*  USGS 11044000, is located near Temecula, California in the Santa Margarita River. At an elevation of 955.88 feet, this site is a part of the protected landscape in the Santa Margarita Ecological Reserve, with a drainage area of 588 sq miles.

- *Unprotected Site (CA):*  USGS 11074000, is located on the Santa Ana River below Prado Dam, CA, and is not associated with any environmental protection with a drainage area of   2,258 sq miles.

- *Protected Site (AZ):* USGS 09510000, is located near Verde, Arizona in the Wild and Scenic River below the Bartlett Dam and is federally protected with a drainage area of 6,161 sq miles.

- *Unprotected Site (AZ):* USGS 09505800, is located near West Clear Creek Near Camp Verde, Arizona with a drainage area of 241 sq miles. 

- *Protected Site (UT):*  USGS 09261000, is near Jensen, Utah located on the Green River at an elevation of 4,761 feet with a drainage area of 29,660 sq miles. 

- *Unprotected Site (UT):* USGS 09315000, is located in Emery County, Utah on the Green River at an elevation of 4, 043 feet and a drainage area of 44,850 sq miles. 

From each of the sites listed above, we obtained daily measurements of streamflow in cubic feet per seconds, water temperature in celsius, and pH levels from the daily data tab on the USGS National Water Information System. In this step of our analysis we reached some issues regarding when data time frames were available, ultimately leading to our decision to have our temporal scope be set between 1975-10-01 (water year 1976) to 2024-10-01 (beginning of water year 2025). In addition to this, we decided to facilitate our analysis by coding our daily values– Flow (cfs), Water Temperature (°C), and pH– to be aggregated into monthly means to be able to observe seasonal variation and reduce short-term noise. All analyses were conducted using Rstudio for visualization, statistical analysis, and mapping into figures. 
	
To quantitatively assess whether environmental protection status is associated with differences in water quality, we conducted the following statistical tests:
	
- *Three one-way ANOVA tests* were used to compare mean flow, temperature, and pH between protected and unprotected sites.

- *Three Welch Two-Sample t-tests* (not assuming equal variances) were performed to further examine differences in flow, temperature, and pH between protection groups.

- *Two Welch one-way tests* were conducted separately for protected and unprotected sites to evaluate variance in flow across different site locations within each group.

- *Two Tukey HSD (Honestly Significant Difference) post-hoc tests* were used for pairwise comparisons following the ANOVA, to determine which sites within each environmental protection group significantly differed from one another.

These methods allowed us to test for both overall group differences (ANOVA) and specific pairwise differences (t-tests and Tukey HSD), while accounting for unequal variances where applicable.

Overall, this mixed-methods approach that we did with including both temporal and spatial comparisons, exploratory data visualization, and a suite of statistical tests, has provided a comprehensive framework to assess whether environmental protections correlate with better water quality outcomes. These methods were selected to ensure replicability, statistical rigor, and alignment with our core research objective in determining how environmental protection status affects water quality within the U.S. Southwest River Basins.


# Results
## Reading and Cleaning Unprotected Sites
```{r}
library(tidyverse)
library(dataRetrieval)
library(ggplot2)
library(plotly)
library(lubridate)
library(ggpubr)
library(plotly)
library(dplyr)
library(tsibble)

  # CO unprotected 1
QCO_unpro1=readNWISdv(
  siteNumber= c('09034250'),
  parameterCd= c('00060'),
  startDate='1975-10-01', #beginning of wateryear 1976
  endDate='2024-10-01') %>%
  renameNWISColumns() %>%
  mutate(Date = yearmonth(Date)) %>%
  group_by(site_no, Date) %>%
  summarise(Flow = mean(Flow, na.rm = TRUE), .groups = "drop")

pHWT_COunpro1 <- read.csv(
  "https://raw.githubusercontent.com/snauman4/ESS330_FinalProject/main/CO_dataunprotected1.csv",
  stringsAsFactors = FALSE
)

# 2. Compute daily means of Temp and pH
DailypW_COunpro1 <- pHWT_COunpro1 %>%
  # parse your Date
  mutate(Date = mdy(Date)) %>%
  # drop the qualifier columns and coerce the true max/min to numeric
  mutate(across(
    c(Temp..max., Temp..min., pH..max., pH..min.),
    ~ as.numeric(.)
  )) %>%
  # compute a rowwise mean of temp and of pH
  mutate(
    Temp_mean = rowMeans(select(., Temp..max., Temp..min.), na.rm = TRUE),
    pH_mean   = rowMeans(select(., pH..max.,    pH..min.),    na.rm = TRUE)
  ) %>%
  group_by(site_no, Date) %>%
  summarise(
    `Temp (C)`  = mean(Temp_mean, na.rm = TRUE),
    `pH (mean)` = mean(pH_mean,   na.rm = TRUE),
    .groups = "drop"
  )

# 3. Roll those daily means up to monthly to line up with your flow data
Month_COunpro1 <- DailypW_COunpro1 %>%
  mutate(
    Date = yearmonth(Date)
  ) %>%
  group_by(site_no, Date) %>%
  summarise(
    `Temp (C)`  = mean(`Temp (C)`,  na.rm = TRUE),
    `pH (mean)` = mean(`pH (mean)`, na.rm = TRUE),
    .groups = "drop"
  )

# make sure site_no is character in both data sets
QCO_unpro1 <- QCO_unpro1 %>%
  mutate(
    site_no = as.character(site_no),        # ensure it’s a string
    Date    = yearmonth(Date)               # ensure it’s a yearmonth
  )

Month_COunpro1 <- Month_COunpro1 %>%
  mutate(
    site_no = str_pad(as.character(site_no), width = 8, pad = "0"),
       # pad out to 8 digits with leading zeros
    Date    = yearmonth(Date)
  )

# now the join will work
COdata_unprotected1 <- QCO_unpro1 %>%
  left_join(Month_COunpro1, by = c("site_no","Date")) %>%
  select(site_no, Date, Flow, `Temp (C)`, `pH (mean)`)

  # CO unprotected 2
QCO_unpro2=readNWISdv(
  siteNumber= c('09147500'),
  parameterCd= c('00060'),
  startDate='1975-10-01', #beginning of wateryear 1976
  endDate='2024-10-01') %>%
  renameNWISColumns() %>%
  mutate(Date = yearmonth(Date)) %>%
  group_by(site_no, Date) %>%
  summarise(Flow = mean(Flow, na.rm = TRUE), .groups = "drop")

pHWT_COunpro2 <- read.csv(
  "https://raw.githubusercontent.com/snauman4/ESS330_FinalProject/main/CO_dataunprotected2.csv",
  stringsAsFactors = FALSE
)

# 2. Compute daily means of Temp and pH
DailypW_COunpro2 <- pHWT_COunpro2 %>%
  # parse your Date
  mutate(Date = mdy(Date)) %>%
  # drop the qualifier columns and coerce the true max/min to numeric
  mutate(across(
    c(Temp..max., Temp..min.),
    ~ as.numeric(.)
  )) %>%
  # compute a rowwise mean of temp and of pH
  mutate(
    Temp_mean = rowMeans(select(., Temp..max., Temp..min.), na.rm = TRUE)
  ) %>%
  group_by(site_no, Date) %>%
  summarise(
    `Temp (C)`  = mean(Temp_mean, na.rm = TRUE),
    .groups = "drop"
  )

# 3. Roll those daily means up to monthly to line up with your flow data
Month_COunpro2 <- DailypW_COunpro2 %>%
  mutate(
    Date = yearmonth(Date)
  ) %>%
  group_by(site_no, Date) %>%
  summarise(
    `Temp (C)`  = mean(`Temp (C)`,  na.rm = TRUE),
    .groups = "drop"
  )

# make sure site_no is character in both data sets
QCO_unpro2 <- QCO_unpro2 %>%
  mutate(
    site_no = as.character(site_no),        # ensure it’s a string
    Date    = yearmonth(Date)               # ensure it’s a yearmonth
  )

Month_COunpro2 <- Month_COunpro2 %>%
  mutate(
    site_no = str_pad(as.character(site_no), width = 8, pad = "0"),
       # pad out to 8 digits with leading zeros
    Date    = yearmonth(Date)
  )

# now the join will work
COdata_unprotected2 <- QCO_unpro2 %>%
  left_join(Month_COunpro2, by = c("site_no","Date")) %>%
  select(site_no, Date, Flow, `Temp (C)`)

  # CA unprotected 
QCA_unpro=readNWISdv(
  siteNumber= c('11074000'),
  parameterCd= c('00060'),
  startDate='1975-10-01', #beginning of wateryear 1976
  endDate='2024-10-01') %>%
  renameNWISColumns() %>%
  mutate(Date = yearmonth(Date)) %>%
  group_by(site_no, Date) %>%
  summarise(Flow = mean(Flow, na.rm = TRUE), .groups = "drop")

pHWT_CAunpro <- read.csv(
  "https://raw.githubusercontent.com/snauman4/ESS330_FinalProject/main/CA_dataunprotected.csv",
  stringsAsFactors = FALSE
)

# 2. Compute daily means of Temp and pH
DailypW_CAunpro <- pHWT_CAunpro %>%
  # parse your Date
  mutate(Date = mdy(Date)) %>%
  # drop the qualifier columns and coerce the true max/min to numeric
  mutate(across(
    c(Temp..max., Temp..min.),
    ~ as.numeric(.)
  )) %>%
  # compute a rowwise mean of temp and of pH
  mutate(
    Temp_mean = rowMeans(select(., Temp..max., Temp..min.), na.rm = TRUE)
  ) %>%
  group_by(site_no, Date) %>%
  summarise(
    `Temp (C)`  = mean(Temp_mean, na.rm = TRUE),
    .groups = "drop"
  )

# 3. Roll those daily means up to monthly to line up with your flow data
Month_CAunpro <- DailypW_CAunpro %>%
  mutate(
    Date = yearmonth(Date)
  ) %>%
  group_by(site_no, Date) %>%
  summarise(
    `Temp (C)`  = mean(`Temp (C)`,  na.rm = TRUE),
    .groups = "drop"
  )

# make sure site_no is character in both data sets
QCA_unpro <- QCA_unpro %>%
  mutate(
    site_no = as.character(site_no),        # ensure it’s a string
    Date    = yearmonth(Date)               # ensure it’s a yearmonth
  )

Month_CAunpro <- Month_CAunpro %>%
  mutate(
    site_no = str_pad(as.character(site_no), width = 8, pad = "0"),
    Date    = yearmonth(Date))

CAdata_unprotected <- QCA_unpro %>%
  left_join(Month_CAunpro, by = c("site_no","Date")) %>%
  select(site_no, Date, Flow, `Temp (C)`)

  # AZ unprotected 
AZunproraw <- read.csv(
  "https://raw.githubusercontent.com/madi-schartz/ESS330-FINAL/refs/heads/master/AZdata_unprotected.csv",
  stringsAsFactors = FALSE
)

# add pH
DailypW_AZunpro <- AZunproraw %>%
  mutate(Date = mdy(Date)) %>% 
  mutate(across(
    c(Temp..mean.),
    ~ as.numeric(.)
  )) %>%
  group_by(site_no, Date) %>%
  summarise(
    Flow       = mean(Discharge..Mean., na.rm = TRUE),
    `Temp (C)` = mean(Temp..mean.,        na.rm = TRUE),
    .groups    = "drop"
  )

AZdata_unprotected <- DailypW_AZunpro %>%
  mutate(Date = yearmonth(Date)) %>%
  group_by(site_no, Date) %>%
  summarise(
    Flow       = mean(Flow,       na.rm = TRUE),
    `Temp (C)` = mean(`Temp (C)`, na.rm = TRUE),
    .groups    = "drop"
  )

  # UT unprotected
UTunproraw <- read.csv(
  "https://raw.githubusercontent.com/madi-schartz/ESS330-FINAL/refs/heads/master/UTdata_unprotected.csv",
  stringsAsFactors = FALSE
)

DailypW_UTunpro <- UTunproraw %>%
  mutate(Date = mdy(Date)) %>% 
  mutate(across(
    c(Discharge,`Temp..Min.`,`Temp..Max.`, `pH..Max.`, `pH..Min.`),
    ~ as.numeric(.)
  )) %>%
  mutate(
    Temp_mean = rowMeans(select(., Temp..Max.,  Temp..Min.), na.rm = TRUE),
    pH_mean   = rowMeans(select(., pH..Max.,     pH..Min.),    na.rm = TRUE)
  ) %>%
  group_by(site_no, Date) %>%
  summarise(
    Flow       = mean(Discharge, na.rm = TRUE),
    `Temp (C)` = mean(Temp_mean,        na.rm = TRUE),
    `pH (mean)`= mean(pH_mean,          na.rm = TRUE),
    .groups    = "drop"
  )

# 3. roll up to monthly
UTdata_unprotected <- DailypW_UTunpro %>%
  mutate(Date = yearmonth(Date)) %>%
  group_by(site_no, Date) %>%
  summarise(
    Flow       = mean(Flow,       na.rm = TRUE),
    `Temp (C)` = mean(`Temp (C)`, na.rm = TRUE),
    `pH (mean)`= mean(`pH (mean)`,na.rm = TRUE),
    .groups    = "drop"
  )
```


```{r}
head(COdata_unprotected1)
head(COdata_unprotected2)
head(CAdata_unprotected)
head(UTdata_unprotected)
```
## Reading and Cleaning Protected Sites
```{r}
  # CO protected 1
QCO_pro1=readNWISdv(
  siteNumber= c('06752260'),
  parameterCd= c('00060'),
  startDate='1975-10-01', #beginning of wateryear 1976
  endDate='2024-10-01') %>%
  renameNWISColumns() %>%
  mutate(Date = yearmonth(Date)) %>%
  group_by(site_no, Date) %>%
  summarise(Flow = mean(Flow, na.rm = TRUE), .groups = "drop")

pHWT_COpro1 <- read.csv(
  "https://raw.githubusercontent.com/snauman4/ESS330_FinalProject/main/CO_dataprotected1.csv",
  stringsAsFactors = FALSE
)

DailypW_COpro1 <- pHWT_COpro1 %>%
  mutate(Date = mdy(Date)) %>%
  mutate(across(
    c(Temp..max., Temp..min.),
    ~ as.numeric(.))) %>%
  mutate(
    Temp_mean = rowMeans(select(., Temp..max., Temp..min.), na.rm = TRUE),
    pH_mean = rowMeans(select(., pH..max., pH..min.), na.rm = TRUE)) %>%
  group_by(site_no, Date) %>%
  summarise(
    `Temp (C)`  = mean(Temp_mean, na.rm = TRUE),
    `pH (mean)` = mean(pH_mean, na.rm = TRUE),
    .groups = "drop")

Month_COpro1 <- DailypW_COpro1 %>%
  mutate(
    Date = yearmonth(Date)) %>%
  group_by(site_no, Date) %>%
  summarise(
    `Temp (C)`  = mean(`Temp (C)`,  na.rm = TRUE),
    `pH (mean)` = mean(`pH (mean)`, na.rm = TRUE),
    .groups = "drop")

QCO_pro1 <- QCO_pro1 %>%
  mutate(
    site_no = as.character(site_no),        
    Date    = yearmonth(Date))

Month_COpro1 <- Month_COpro1 %>%
  mutate(
    site_no = str_pad(as.character(site_no), width = 8, pad = "0"),
    Date    = yearmonth(Date))

COdata_protected1 <- QCO_pro1 %>%
  left_join(Month_COpro1, by = c("site_no","Date")) %>%
  select(site_no, Date, Flow, `Temp (C)`, `pH (mean)`)

  # CO protected 2
QCO_pro2=readNWISdv(
  siteNumber= c('09163500'),
  parameterCd= c('00060'),
  startDate='1975-10-01', #beginning of wateryear 1976
  endDate='2024-10-01') %>%
  renameNWISColumns() %>%
  mutate(Date = yearmonth(Date)) %>%
  group_by(site_no, Date) %>%
  summarise(Flow = mean(Flow, na.rm = TRUE), .groups = "drop")

pHWT_COpro2 <- read.csv(
  "https://raw.githubusercontent.com/snauman4/ESS330_FinalProject/main/CO_dataprotected2.csv",
  stringsAsFactors = FALSE
)

DailypW_COpro2 <- pHWT_COpro2 %>%
  mutate(Date = mdy(Date)) %>%
  mutate(across(
    c(Temp..max., Temp..min.),
    ~ as.numeric(.))) %>%
  mutate(
    Temp_mean = rowMeans(select(., Temp..max., Temp..min.), na.rm = TRUE),
    pH_mean = rowMeans(select(., pH..max., pH..min.), na.rm = TRUE)) %>%
  group_by(site_no, Date) %>%
  summarise(
    `Temp (C)`  = mean(Temp_mean, na.rm = TRUE),
    `pH (mean)` = mean(pH_mean, na.rm = TRUE),
    .groups = "drop")

Month_COpro2 <- DailypW_COpro2 %>%
  mutate(
    Date = yearmonth(Date)) %>%
  group_by(site_no, Date) %>%
  summarise(
    `Temp (C)`  = mean(`Temp (C)`,  na.rm = TRUE),
    `pH (mean)` = mean(`pH (mean)`, na.rm = TRUE),
    .groups = "drop")

QCO_pro2 <- QCO_pro2 %>%
  mutate(
    site_no = as.character(site_no),       
    Date    = yearmonth(Date))

Month_COpro2 <- Month_COpro2 %>%
  mutate(
    site_no = str_pad(as.character(site_no), width = 8, pad = "0"),
    Date    = yearmonth(Date))

COdata_protected2 <- QCO_pro2 %>%
  left_join(Month_COpro2, by = c("site_no","Date")) %>%
  select(site_no, Date, Flow, `Temp (C)`, `pH (mean)`)

  # CA protected
QCA_pro=readNWISdv(
  siteNumber= c('11044000'),
  parameterCd= c('00060'),
  startDate='1975-10-01', #beginning of wateryear 1976
  endDate='2024-10-01') %>%
  renameNWISColumns() %>%
  mutate(Date = yearmonth(Date)) %>%
  group_by(site_no, Date) %>%
  summarise(Flow = mean(Flow, na.rm = TRUE), .groups = "drop")

pHWT_CApro <- read.csv(
  "https://raw.githubusercontent.com/snauman4/ESS330_FinalProject/main/CA_dataprotected.csv",
  stringsAsFactors = FALSE
)

DailypW_CApro <- pHWT_CApro %>%
  mutate(Date = mdy(Date)) %>%
  mutate(across(
    c(Temp..max., Temp..min.,`pH..max.`, `pH..min.`),
    ~ as.numeric(.),
    .names = "{.col}")
  ) %>%
  mutate(
    Temp_mean = rowMeans(select(., Temp..max., Temp..min.), na.rm = TRUE),
    pH_mean   = rowMeans(select(., pH..max.,    pH..min.),    na.rm = TRUE)
  ) %>%
  group_by(site_no, Date) %>%
  summarise(
    `Temp (C)`  = mean(Temp_mean, na.rm = TRUE),
    `pH (mean)` = mean(pH_mean, na.rm = TRUE),
    .groups = "drop"
  )

Month_CApro <- DailypW_CApro %>%
  mutate(
    Date = yearmonth(Date)
  ) %>%
  group_by(site_no, Date) %>%
  summarise(
    `Temp (C)`  = mean(`Temp (C)`,  na.rm = TRUE),
    `pH (mean)` = mean(`pH (mean)`, na.rm = TRUE),
    .groups = "drop"
  )

QCA_pro <- QCA_pro %>%
  mutate(
    site_no = as.character(site_no),       
    Date    = yearmonth(Date)               
  )

Month_CApro <- Month_CApro %>%
  mutate(
    site_no = str_pad(as.character(site_no), width = 8, pad = "0"),
    Date    = yearmonth(Date)
  )

CAdata_protected <- QCA_pro %>%
  left_join(Month_CApro, by = c("site_no","Date")) %>%
  select(site_no, Date, Flow, `Temp (C)`, `pH (mean)`)

  # AZ data 
AZraw <- read.csv(
  "https://raw.githubusercontent.com/hvelicer/ESS330_finalproject/refs/heads/main/AZdata_protected.csv",
  stringsAsFactors = FALSE
)

DailypW_AZpro <- AZraw %>%
  mutate(Date = mdy(Date)) %>% 
  mutate(across(
    c(Temp..max., Temp..min., `pH..max.`, `pH..min.`),
    ~ as.numeric(.)
  )) %>%
  mutate(
    Temp_mean = rowMeans(select(., Temp..max.,  Temp..min.), na.rm = TRUE),
    pH_mean   = rowMeans(select(., pH..max.,     pH..min.),    na.rm = TRUE)
  ) %>%
  group_by(site_no, Date) %>%
  summarise(
    Flow       = mean(Discharge..mean., na.rm = TRUE),
    `Temp (C)` = mean(Temp..mean.,        na.rm = TRUE),
    `pH (mean)`= mean(pH_mean,          na.rm = TRUE),
    .groups    = "drop"
  )

AZdata_protected <- DailypW_AZpro %>%
  mutate(Date = yearmonth(Date)) %>%
  group_by(site_no, Date) %>%
  summarise(
    Flow       = mean(Flow,       na.rm = TRUE),
    `Temp (C)` = mean(`Temp (C)`, na.rm = TRUE),
    `pH (mean)`= mean(`pH (mean)`,na.rm = TRUE),
    .groups    = "drop"
  )

  # UT data
UTraw <- read.csv(
  "https://raw.githubusercontent.com/hvelicer/ESS330_finalproject/main/UTdata_protected.csv",
  stringsAsFactors = FALSE
)

DailypW_UTpro <- UTraw %>%
  mutate(Date = mdy(Date)) %>% 
  mutate(across(
    c(Temp..max., Temp..min., `pH..max.`, `pH..min.`),
    ~ as.numeric(.)
  )) %>%
  mutate(
    Temp_mean = rowMeans(select(., Temp..max.,  Temp..min.), na.rm = TRUE),
    pH_mean   = rowMeans(select(., pH..max.,     pH..min.),    na.rm = TRUE)
  ) %>%
  group_by(site_no, Date) %>%
  summarise(
    Flow       = mean(Discharge..mean., na.rm = TRUE),
    `Temp (C)` = mean(Temp_mean,        na.rm = TRUE),
    `pH (mean)`= mean(pH_mean,          na.rm = TRUE),
    .groups    = "drop"
  )

UTdata_protected <- DailypW_UTpro %>%
  mutate(Date = yearmonth(Date)) %>%
  group_by(site_no, Date) %>%
  summarise(
    Flow       = mean(Flow,       na.rm = TRUE),
    `Temp (C)` = mean(`Temp (C)`, na.rm = TRUE),
    `pH (mean)`= mean(`pH (mean)`,na.rm = TRUE),
    .groups    = "drop"
  )
```

```{r}
head(COdata_protected1)
head(COdata_protected2)
head(CAdata_protected)
head(AZdata_protected)
head(UTdata_protected)
```

## Yearly Flow, Water Temperature (C), and pH (mean)
```{r}
# 1) bind & tag
unprotected_all <- bind_rows(
  COdata_unprotected1 %>% mutate(site_no = as.character(site_no)),
  COdata_unprotected2 %>% mutate(site_no = as.character(site_no)),
  CAdata_unprotected   %>% mutate(site_no = as.character(site_no)),
  AZdata_unprotected   %>% mutate(site_no = as.character(site_no)),
  UTdata_unprotected   %>% mutate(site_no = as.character(site_no))
) %>%
  mutate(protection = "Unprotected")

protected_all <- bind_rows(
  COdata_protected1 %>% mutate(site_no = as.character(site_no)),
  COdata_protected2 %>% mutate(site_no = as.character(site_no)),
  CAdata_protected  %>% mutate(site_no = as.character(site_no)),
  AZdata_protected  %>% mutate(site_no = as.character(site_no)),
  UTdata_protected  %>% mutate(site_no = as.character(site_no))
) %>%
  mutate(protection = "Protected")

# 2) factorize **after** sub‐setting (so you only get the levels you actually have)
unprotected_all <- unprotected_all %>% mutate(site_no = factor(site_no))
protected_all   <- protected_all   %>% mutate(site_no = factor(site_no))

# 3) helper
make_panel <- function(df, yvar, title) {
  ggplot(df, aes(x = Date, y = .data[[yvar]], colour = site_no)) +
    geom_line(size = 0.3,   na.rm = TRUE) +
    geom_point(size = 0.8,  na.rm = TRUE) +
    labs(title = title, x = NULL, y = NULL, colour = "Site") +
    theme_minimal()
}

# 4) build
p_flow_un <- make_panel(unprotected_all, "Flow",      "Unprotected Flow")
ggplotly(p_flow_un)
p_temp_un <- make_panel(unprotected_all, "Temp (C)",  "Unprotected Temp (C)")
ggplotly(p_temp_un)
p_ph_un   <- make_panel(unprotected_all, "pH (mean)", "Unprotected pH (mean)")
ggplotly(p_ph_un)

p_flow_pr <- make_panel(protected_all,   "Flow",      "Protected Flow")
ggplotly(p_flow_pr)
p_temp_pr <- make_panel(protected_all,   "Temp (C)",  "Protected Temp (C)")
ggplotly(p_temp_pr)
p_ph_pr   <- make_panel(protected_all,   "pH (mean)", "Protected pH (mean)")
ggplotly(p_ph_pr)

# 5) stack
Yearly_un <- ggarrange(
  p_flow_un, p_temp_un, p_ph_un,
  ncol = 1, nrow = 3,
  common.legend = TRUE, legend = "bottom"
)

Yearly_pr <- ggarrange(
  p_flow_pr, p_temp_pr, p_ph_pr,
  ncol = 1, nrow = 3,
  common.legend = TRUE, legend = "bottom"
)

Yearly_both <- ggarrange(
  Yearly_un, Yearly_pr,
  ncol   = 2, widths = c(1,1),
  label.x = c(0.05, 0.55),
  label.y = 1.02
)

print(Yearly_both)
```
We first visualized monthly flow, temperature, and pH trends separately for unprotected and protected sites over the years of 1975-10-01 (water year 1976) to 2024-10-01 (beginning of water year 2025). In the unprotected basins, flow exhibits large spikes, mainly at USGS site 9315000, during spring and early summer months, whereas the other four unprotected sites remain relatively low and stable throughout the record. Protected sites show a similar seasonal pulse in flow (notably at 09163500 and 9261000) but with generally lower peak magnitudes compared to the highest‐flow unprotected basin. Temperature time‐series at both unprotected and protected sites display pronounced annual cycles, with summer highs around 20–25 °C and winter lows near 0–5 °C. However, the timing and amplitude of those cycles vary by site based on elevation and location. The pH plots reveal tight clustering around neutral to slightly alkaline values (7.5–8.5 pH) across all sites, with only minor month‐to‐month fluctuations and no obvious long‐term drift.
## Seasonal Flows
```{r}
# Looking at seasonal data
library(tsibble)
library(feasts)
library(plotly)

# turn your data into a tsibble
ts_unprotected <- unprotected_all %>%
  as_tsibble(key = site_no, index = Date)
ts_protected <- protected_all %>% 
  as_tsibble(key = site_no, index = Date)

# 1) Unprotected
p_sub_flow_un <- ts_unprotected %>% 
  gg_subseries(Flow) +
  labs(title="Unprotected Flow Subseries")

# 2) Protected 
p_sub_flow_pr <- ts_protected %>% 
  gg_subseries(Flow) +
  labs(title="Protected Flow Subseries")

ggplotly(p_sub_flow_un)
ggplotly(p_sub_flow_pr)
```
Seasonal subseries plots break down each site’s flow into monthly panels. Seasonal flow subseries for protected sites reveal a clear pulse each June, with median monthly flows peaking higher than in other months and relatively tight variability across years. On the other hand, winter months (December–February) consistently exhibit near‐zero median flows and minimal spread. In contrast, unprotected basins also peak in June but display much broader variability, particularly in April–July, while their winter panels remain clustered near zero, highlighting more pronounced seasonal swings in flow at unprotected locations.

## Statistical Tests
```{r}
# 1) combine into one df
combined <- bind_rows(
  unprotected_all,
  protected_all
) %>% 
  mutate(
    protection = factor(protection, levels = c("Unprotected","Protected")),
    site_no    = factor(site_no)
  )

# 2) ANOVA by protection
anova_flow <- aov(Flow       ~ protection, data = combined)
anova_temp <- aov(`Temp (C)` ~ protection, data = combined)
anova_ph   <- aov(`pH (mean)`~ protection, data = combined)

summary(anova_flow)
summary(anova_temp)
summary(anova_ph)

# 3) two‐sample t‐tests by protection
t.test(Flow       ~ protection, data = combined)
t.test(`Temp (C)` ~ protection, data = combined)
t.test(`pH (mean)`~ protection, data = combined)

# 4) if variances aren’t equal, switch to Welch’s ANOVA
oneway.test(Flow ~ site_no, data = unprotected_all, var.equal = FALSE)
oneway.test(Flow ~ site_no, data = protected_all,   var.equal = FALSE)

# 5) post‐hoc pairwise comparisons
anova_un_flow <- aov(Flow       ~ site_no, data = unprotected_all)
TukeyHSD(anova_un_flow)

anova_pr_flow <- aov(Flow       ~ site_no, data = protected_all)
TukeyHSD(anova_pr_flow)
```
Across our full monthly dataset with the combined protected and unprotected sites, one‐way ANOVAs showed significant differences between Protected vs. Unprotected sites for Flow (p < 2e-16), Temp (p = 4.32e-15), and pH (p = 1.1e-15). Welch two‐sample t‐tests confirmed that mean monthly Flow was higher at Protected sites (protected = 2177.551 vs. unprotected 1254.596 cfs, p < 2e-16), while Unprotected sites were warmer (unprotected = 15.46 vs. protected = 13.09 °C, p = 2.749e-15) and more alkaline/higher pH (unprotected = 8.33 vs. protected = 8.01, p = 1.364e-12). Within each protection class, one‐way ANOVAs of Flow by site_no were also highly significant (Unprotected: p < 2.2e-15; Protected: p < 2.2e-16). In addition, the post‐hoc Tukey HSD table shows which specific pairs have a statistically significant difference in mean flow (adjusted p-value < 0.05). 

# Discussion

The significance of our results is that it shows statistically significant differences in water quality through our indicators of Flow (cfs), Water Temperature (°C), and pH levels between protected and unprotected river sites across the Southwest River Basin region. Our analysis have supported this finding as the three, one-way ANOVA tests that were conducted confirmed that protection status plays a statistically significant role in influencing these hydrological and chemical properties ( Flow: p < 2e-16; Water Temperature: p = 4.32e-15; pH = 1.1e-15). The second statistical test, the Welsh two-sample t-tests,  we conducted also supported this through showing that protected sites showed a significantly higher average flow (21777.55 cfs) than unprotected sites (1254.60 cfs), as unprotected sites typically had higher water temperatures averages (15.46°C) in comparison to protected sites (13.09°C), and slightly more alkaline conditions (pH 8.33 vs 8.01). These results suggest that protection status is associated with both chemical and physical differences in the Southwest River Basin systems. With that being said, it is also important to note that site-specific factors like elevation, local land, and drainage area contribute meaningful to variability as we saw in the Welch one-way test and Tukey HSD post-hoc tests that further confirmed that not all protected and unprotected sites are hydrologically equivalent. 

The implications of our findings are great in the fields of ecology and conservation. While our analysis shows statistically significant differences in the water quality indicators in protected and unprotected sites throughout the Southwest river basin regions, it is highlighting issues in site-level management and local geography with how we interact with our watershed systems. It also shows that although in our study, it favors that protected sites have healthier more balanced watershed systems this can instead be an issue regarding context-specific conservation strategies instead of favoring the assumption that a protection status alone is enough to guarantee healthy and quality river systems. 

The limitations of our analysis have to do mainly with the data collection part of the project. Finding complete datasets that had enough daily data was more difficult than we originally planned. The process took about two weeks to find all ten protected and unprotected sites with multiple years of discharge flow rate, water temperature, and pH daily data. As seen in the result figures, most of the unprotected sites do not have pH data. In a way, this supports our hypothesis that protected sites have better regulations and get more attention than the unprotected sites, and along with that, receive more data collection focus. It was difficult to find unprotected sites that had all our necessary variables for this project, while it was relatively simple to find protected sites that met our requirements. Again, we believe this is part of the larger issue of unprotected sites not getting as much observation as the protected ones. Additionally, the timeline of many of the sites for each variable do not match up completely. As seen in the result figures, some sites may have temperature data from 1975-2024, while others only have 2023-2025, and so on. For the most part, this was not an issue but it is something to keep in mind for comparisons because the data does not match up time wise completely. However, there is enough data for each site, for each variable, to see overall long-term trends and use those to make comparisons between the protected and unprotected sites. Finally, the drainage area for each site differs. Some of the river systems are on the bigger side, like the Colorado River, so they have more discharge flow automatically than others. Again, similar to the timeline issue, we are still able to see overall long-term trends for each site regardless of drainage size, so we are still able to make comparisons based on that.

Our results relate to the broader field of science through showing that there needs to be more resources for protecting and managing parts of our ecosystems that are exposed more often to anthropogenic stressors which affect the way they are able to function. This can also be seen throughout our data limitations throughout our whole journey in finding river sites that have data beyond discharge rates. Typically unprotected sites didn’t have enough data from lack of monitoring which goes back to how our study relates to our broader field of science in stressing that financial resources and having a crew to keep up with the management and monitoring of our ecosystem is crucial. 

Looking towards the future, there are many possible ways to bounce off of our results for other projects. Given that we only looked at the Southwestern United States, an obvious stepping stone is expanding the study region to focus on other areas of the States, and even around the world. Instead of just focusing on protected vs. unprotected river systems, we could also expand to other biomes, like rainforests, deserts, or grasslands. This could provide a more broad framework to be used in future conservation plans and laws, not just helping river systems but more ecosystems worldwide. 