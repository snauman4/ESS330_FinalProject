---
title: Differing Water Quality in Protected and Unprotected U.S. Southwest River Basins
authors:
  - name: Samantha Nauman, Madison Schartz, Hanna Velicer
    affiliation: Colorado State University
    roles: writing
    corresponding: true
bibliography: references.bib
execute: 
  echo: true
---
# Drafting the Introduction, Background, and Motivation for the Project

BLAH

# Exploring the Data

```{r}
library(tidyverse)
library(dataRetrieval)
library(ggplot2)
library(plotly)
library(lubridate)
library(ggpubr)
library(plotly)
library(dplyr)
library(tsibble)

  # CO unprotected 1
QCO_unpro1=readNWISdv(
  siteNumber= c('09034250'),
  parameterCd= c('00060'),
  startDate='1975-10-01', #beginning of wateryear 1976
  endDate='2024-10-01') %>%
  renameNWISColumns() %>%
  mutate(Date = yearmonth(Date)) %>%
  group_by(site_no, Date) %>%
  summarise(Flow = mean(Flow, na.rm = TRUE), .groups = "drop")

pHWT_COunpro1 <- read.csv(
  "https://raw.githubusercontent.com/snauman4/ESS330_FinalProject/main/CO_dataunprotected1.csv",
  stringsAsFactors = FALSE
)

# 2. Compute daily means of Temp and pH
DailypW_COunpro1 <- pHWT_COunpro1 %>%
  # parse your Date
  mutate(Date = mdy(Date)) %>%
  # drop the qualifier columns and coerce the true max/min to numeric
  mutate(across(
    c(Temp..max., Temp..min., pH..max., pH..min.),
    ~ as.numeric(.)
  )) %>%
  # compute a rowwise mean of temp and of pH
  mutate(
    Temp_mean = rowMeans(select(., Temp..max., Temp..min.), na.rm = TRUE),
    pH_mean   = rowMeans(select(., pH..max.,    pH..min.),    na.rm = TRUE)
  ) %>%
  group_by(site_no, Date) %>%
  summarise(
    `Temp (C)`  = mean(Temp_mean, na.rm = TRUE),
    `pH (mean)` = mean(pH_mean,   na.rm = TRUE),
    .groups = "drop"
  )

# 3. Roll those daily means up to monthly to line up with your flow data
Month_COunpro1 <- DailypW_COunpro1 %>%
  mutate(
    Date = yearmonth(Date)
  ) %>%
  group_by(site_no, Date) %>%
  summarise(
    `Temp (C)`  = mean(`Temp (C)`,  na.rm = TRUE),
    `pH (mean)` = mean(`pH (mean)`, na.rm = TRUE),
    .groups = "drop"
  )

# make sure site_no is character in both data sets
QCO_unpro1 <- QCO_unpro1 %>%
  mutate(
    site_no = as.character(site_no),        # ensure it’s a string
    Date    = yearmonth(Date)               # ensure it’s a yearmonth
  )

Month_COunpro1 <- Month_COunpro1 %>%
  mutate(
    site_no = str_pad(as.character(site_no), width = 8, pad = "0"),
       # pad out to 8 digits with leading zeros
    Date    = yearmonth(Date)
  )

# now the join will work
COdata_unprotected1 <- QCO_unpro1 %>%
  left_join(Month_COunpro1, by = c("site_no","Date")) %>%
  select(site_no, Date, Flow, `Temp (C)`, `pH (mean)`)

  # CO unprotected 2
QCO_unpro2=readNWISdv(
  siteNumber= c('09147500'),
  parameterCd= c('00060'),
  startDate='1975-10-01', #beginning of wateryear 1976
  endDate='2024-10-01') %>%
  renameNWISColumns() %>%
  mutate(Date = yearmonth(Date)) %>%
  group_by(site_no, Date) %>%
  summarise(Flow = mean(Flow, na.rm = TRUE), .groups = "drop")

pHWT_COunpro2 <- read.csv(
  "https://raw.githubusercontent.com/snauman4/ESS330_FinalProject/main/CO_dataunprotected2.csv",
  stringsAsFactors = FALSE
)

# 2. Compute daily means of Temp and pH
DailypW_COunpro2 <- pHWT_COunpro2 %>%
  # parse your Date
  mutate(Date = mdy(Date)) %>%
  # drop the qualifier columns and coerce the true max/min to numeric
  mutate(across(
    c(Temp..max., Temp..min.),
    ~ as.numeric(.)
  )) %>%
  # compute a rowwise mean of temp and of pH
  mutate(
    Temp_mean = rowMeans(select(., Temp..max., Temp..min.), na.rm = TRUE)
  ) %>%
  group_by(site_no, Date) %>%
  summarise(
    `Temp (C)`  = mean(Temp_mean, na.rm = TRUE),
    .groups = "drop"
  )

# 3. Roll those daily means up to monthly to line up with your flow data
Month_COunpro2 <- DailypW_COunpro2 %>%
  mutate(
    Date = yearmonth(Date)
  ) %>%
  group_by(site_no, Date) %>%
  summarise(
    `Temp (C)`  = mean(`Temp (C)`,  na.rm = TRUE),
    .groups = "drop"
  )

# make sure site_no is character in both data sets
QCO_unpro2 <- QCO_unpro2 %>%
  mutate(
    site_no = as.character(site_no),        # ensure it’s a string
    Date    = yearmonth(Date)               # ensure it’s a yearmonth
  )

Month_COunpro2 <- Month_COunpro2 %>%
  mutate(
    site_no = str_pad(as.character(site_no), width = 8, pad = "0"),
       # pad out to 8 digits with leading zeros
    Date    = yearmonth(Date)
  )

# now the join will work
COdata_unprotected2 <- QCO_unpro2 %>%
  left_join(Month_COunpro2, by = c("site_no","Date")) %>%
  select(site_no, Date, Flow, `Temp (C)`)

  # CA unprotected 
QCA_unpro=readNWISdv(
  siteNumber= c('11074000'),
  parameterCd= c('00060'),
  startDate='1975-10-01', #beginning of wateryear 1976
  endDate='2024-10-01') %>%
  renameNWISColumns() %>%
  mutate(Date = yearmonth(Date)) %>%
  group_by(site_no, Date) %>%
  summarise(Flow = mean(Flow, na.rm = TRUE), .groups = "drop")

pHWT_CAunpro <- read.csv(
  "https://raw.githubusercontent.com/snauman4/ESS330_FinalProject/main/CA_dataunprotected.csv",
  stringsAsFactors = FALSE
)

# 2. Compute daily means of Temp and pH
DailypW_CAunpro <- pHWT_CAunpro %>%
  # parse your Date
  mutate(Date = mdy(Date)) %>%
  # drop the qualifier columns and coerce the true max/min to numeric
  mutate(across(
    c(Temp..max., Temp..min.),
    ~ as.numeric(.)
  )) %>%
  # compute a rowwise mean of temp and of pH
  mutate(
    Temp_mean = rowMeans(select(., Temp..max., Temp..min.), na.rm = TRUE)
  ) %>%
  group_by(site_no, Date) %>%
  summarise(
    `Temp (C)`  = mean(Temp_mean, na.rm = TRUE),
    .groups = "drop"
  )

# 3. Roll those daily means up to monthly to line up with your flow data
Month_CAunpro <- DailypW_CAunpro %>%
  mutate(
    Date = yearmonth(Date)
  ) %>%
  group_by(site_no, Date) %>%
  summarise(
    `Temp (C)`  = mean(`Temp (C)`,  na.rm = TRUE),
    .groups = "drop"
  )

# make sure site_no is character in both data sets
QCA_unpro <- QCA_unpro %>%
  mutate(
    site_no = as.character(site_no),        # ensure it’s a string
    Date    = yearmonth(Date)               # ensure it’s a yearmonth
  )

Month_CAunpro <- Month_CAunpro %>%
  mutate(
    site_no = str_pad(as.character(site_no), width = 8, pad = "0"),
    Date    = yearmonth(Date))

CAdata_unprotected <- QCA_unpro %>%
  left_join(Month_CAunpro, by = c("site_no","Date")) %>%
  select(site_no, Date, Flow, `Temp (C)`)

  # AZ unprotected 
AZunproraw <- read.csv(
  "https://raw.githubusercontent.com/madi-schartz/ESS330-FINAL/refs/heads/master/AZdata_unprotected.csv",
  stringsAsFactors = FALSE
)

# add pH
DailypW_AZunpro <- AZunproraw %>%
  mutate(Date = mdy(Date)) %>% 
  mutate(across(
    c(Temp..mean.),
    ~ as.numeric(.)
  )) %>%
  group_by(site_no, Date) %>%
  summarise(
    Flow       = mean(Discharge..Mean., na.rm = TRUE),
    `Temp (C)` = mean(Temp..mean.,        na.rm = TRUE),
    .groups    = "drop"
  )

AZdata_unprotected <- DailypW_AZunpro %>%
  mutate(Date = yearmonth(Date)) %>%
  group_by(site_no, Date) %>%
  summarise(
    Flow       = mean(Flow,       na.rm = TRUE),
    `Temp (C)` = mean(`Temp (C)`, na.rm = TRUE),
    .groups    = "drop"
  )

  # UT unprotected
UTunproraw <- read.csv(
  "https://raw.githubusercontent.com/madi-schartz/ESS330-FINAL/refs/heads/master/UTdata_unprotected.csv",
  stringsAsFactors = FALSE
)

DailypW_UTunpro <- UTunproraw %>%
  mutate(Date = mdy(Date)) %>% 
  mutate(across(
    c(Discharge,`Temp..Min.`,`Temp..Max.`, `pH..Max.`, `pH..Min.`),
    ~ as.numeric(.)
  )) %>%
  mutate(
    Temp_mean = rowMeans(select(., Temp..Max.,  Temp..Min.), na.rm = TRUE),
    pH_mean   = rowMeans(select(., pH..Max.,     pH..Min.),    na.rm = TRUE)
  ) %>%
  group_by(site_no, Date) %>%
  summarise(
    Flow       = mean(Discharge, na.rm = TRUE),
    `Temp (C)` = mean(Temp_mean,        na.rm = TRUE),
    `pH (mean)`= mean(pH_mean,          na.rm = TRUE),
    .groups    = "drop"
  )

# 3. roll up to monthly
UTdata_unprotected <- DailypW_UTunpro %>%
  mutate(Date = yearmonth(Date)) %>%
  group_by(site_no, Date) %>%
  summarise(
    Flow       = mean(Flow,       na.rm = TRUE),
    `Temp (C)` = mean(`Temp (C)`, na.rm = TRUE),
    `pH (mean)`= mean(`pH (mean)`,na.rm = TRUE),
    .groups    = "drop"
  )
```


```{r}
head(COdata_unprotected1)
head(COdata_unprotected2)
head(CAdata_unprotected)
head(UTdata_unprotected)
```

```{r}
  # CO protected 1
QCO_pro1=readNWISdv(
  siteNumber= c('06752260'),
  parameterCd= c('00060'),
  startDate='1975-10-01', #beginning of wateryear 1976
  endDate='2024-10-01') %>%
  renameNWISColumns() %>%
  mutate(Date = yearmonth(Date)) %>%
  group_by(site_no, Date) %>%
  summarise(Flow = mean(Flow, na.rm = TRUE), .groups = "drop")

pHWT_COpro1 <- read.csv(
  "https://raw.githubusercontent.com/snauman4/ESS330_FinalProject/main/CO_dataprotected1.csv",
  stringsAsFactors = FALSE
)

DailypW_COpro1 <- pHWT_COpro1 %>%
  mutate(Date = mdy(Date)) %>%
  mutate(across(
    c(Temp..max., Temp..min.),
    ~ as.numeric(.))) %>%
  mutate(
    Temp_mean = rowMeans(select(., Temp..max., Temp..min.), na.rm = TRUE),
    pH_mean = rowMeans(select(., pH..max., pH..min.), na.rm = TRUE)) %>%
  group_by(site_no, Date) %>%
  summarise(
    `Temp (C)`  = mean(Temp_mean, na.rm = TRUE),
    `pH (mean)` = mean(pH_mean, na.rm = TRUE),
    .groups = "drop")

Month_COpro1 <- DailypW_COpro1 %>%
  mutate(
    Date = yearmonth(Date)) %>%
  group_by(site_no, Date) %>%
  summarise(
    `Temp (C)`  = mean(`Temp (C)`,  na.rm = TRUE),
    `pH (mean)` = mean(`pH (mean)`, na.rm = TRUE),
    .groups = "drop")

QCO_pro1 <- QCO_pro1 %>%
  mutate(
    site_no = as.character(site_no),        
    Date    = yearmonth(Date))

Month_COpro1 <- Month_COpro1 %>%
  mutate(
    site_no = str_pad(as.character(site_no), width = 8, pad = "0"),
    Date    = yearmonth(Date))

COdata_protected1 <- QCO_pro1 %>%
  left_join(Month_COpro1, by = c("site_no","Date")) %>%
  select(site_no, Date, Flow, `Temp (C)`, `pH (mean)`)

  # CO protected 2
QCO_pro2=readNWISdv(
  siteNumber= c('09163500'),
  parameterCd= c('00060'),
  startDate='1975-10-01', #beginning of wateryear 1976
  endDate='2024-10-01') %>%
  renameNWISColumns() %>%
  mutate(Date = yearmonth(Date)) %>%
  group_by(site_no, Date) %>%
  summarise(Flow = mean(Flow, na.rm = TRUE), .groups = "drop")

pHWT_COpro2 <- read.csv(
  "https://raw.githubusercontent.com/snauman4/ESS330_FinalProject/main/CO_dataprotected2.csv",
  stringsAsFactors = FALSE
)

DailypW_COpro2 <- pHWT_COpro2 %>%
  mutate(Date = mdy(Date)) %>%
  mutate(across(
    c(Temp..max., Temp..min.),
    ~ as.numeric(.))) %>%
  mutate(
    Temp_mean = rowMeans(select(., Temp..max., Temp..min.), na.rm = TRUE),
    pH_mean = rowMeans(select(., pH..max., pH..min.), na.rm = TRUE)) %>%
  group_by(site_no, Date) %>%
  summarise(
    `Temp (C)`  = mean(Temp_mean, na.rm = TRUE),
    `pH (mean)` = mean(pH_mean, na.rm = TRUE),
    .groups = "drop")

Month_COpro2 <- DailypW_COpro2 %>%
  mutate(
    Date = yearmonth(Date)) %>%
  group_by(site_no, Date) %>%
  summarise(
    `Temp (C)`  = mean(`Temp (C)`,  na.rm = TRUE),
    `pH (mean)` = mean(`pH (mean)`, na.rm = TRUE),
    .groups = "drop")

QCO_pro2 <- QCO_pro2 %>%
  mutate(
    site_no = as.character(site_no),       
    Date    = yearmonth(Date))

Month_COpro2 <- Month_COpro2 %>%
  mutate(
    site_no = str_pad(as.character(site_no), width = 8, pad = "0"),
    Date    = yearmonth(Date))

COdata_protected2 <- QCO_pro2 %>%
  left_join(Month_COpro2, by = c("site_no","Date")) %>%
  select(site_no, Date, Flow, `Temp (C)`, `pH (mean)`)

  # CA protected
QCA_pro=readNWISdv(
  siteNumber= c('11044000'),
  parameterCd= c('00060'),
  startDate='1975-10-01', #beginning of wateryear 1976
  endDate='2024-10-01') %>%
  renameNWISColumns() %>%
  mutate(Date = yearmonth(Date)) %>%
  group_by(site_no, Date) %>%
  summarise(Flow = mean(Flow, na.rm = TRUE), .groups = "drop")

pHWT_CApro <- read.csv(
  "https://raw.githubusercontent.com/snauman4/ESS330_FinalProject/main/CA_dataprotected.csv",
  stringsAsFactors = FALSE
)

DailypW_CApro <- pHWT_CApro %>%
  mutate(Date = mdy(Date)) %>%
  mutate(across(
    c(Temp..max., Temp..min.,`pH..max.`, `pH..min.`),
    ~ as.numeric(.),
    .names = "{.col}")
  ) %>%
  mutate(
    Temp_mean = rowMeans(select(., Temp..max., Temp..min.), na.rm = TRUE),
    pH_mean   = rowMeans(select(., pH..max.,    pH..min.),    na.rm = TRUE)
  ) %>%
  group_by(site_no, Date) %>%
  summarise(
    `Temp (C)`  = mean(Temp_mean, na.rm = TRUE),
    `pH (mean)` = mean(pH_mean, na.rm = TRUE),
    .groups = "drop"
  )

Month_CApro <- DailypW_CApro %>%
  mutate(
    Date = yearmonth(Date)
  ) %>%
  group_by(site_no, Date) %>%
  summarise(
    `Temp (C)`  = mean(`Temp (C)`,  na.rm = TRUE),
    `pH (mean)` = mean(`pH (mean)`, na.rm = TRUE),
    .groups = "drop"
  )

QCA_pro <- QCA_pro %>%
  mutate(
    site_no = as.character(site_no),       
    Date    = yearmonth(Date)               
  )

Month_CApro <- Month_CApro %>%
  mutate(
    site_no = str_pad(as.character(site_no), width = 8, pad = "0"),
    Date    = yearmonth(Date)
  )

CAdata_protected <- QCA_pro %>%
  left_join(Month_CApro, by = c("site_no","Date")) %>%
  select(site_no, Date, Flow, `Temp (C)`, `pH (mean)`)

  # AZ data 
AZraw <- read.csv(
  "https://raw.githubusercontent.com/hvelicer/ESS330_finalproject/refs/heads/main/AZdata_protected.csv",
  stringsAsFactors = FALSE
)

DailypW_AZpro <- AZraw %>%
  mutate(Date = mdy(Date)) %>% 
  mutate(across(
    c(Temp..max., Temp..min., `pH..max.`, `pH..min.`),
    ~ as.numeric(.)
  )) %>%
  mutate(
    Temp_mean = rowMeans(select(., Temp..max.,  Temp..min.), na.rm = TRUE),
    pH_mean   = rowMeans(select(., pH..max.,     pH..min.),    na.rm = TRUE)
  ) %>%
  group_by(site_no, Date) %>%
  summarise(
    Flow       = mean(Discharge..mean., na.rm = TRUE),
    `Temp (C)` = mean(Temp..mean.,        na.rm = TRUE),
    `pH (mean)`= mean(pH_mean,          na.rm = TRUE),
    .groups    = "drop"
  )

AZdata_protected <- DailypW_AZpro %>%
  mutate(Date = yearmonth(Date)) %>%
  group_by(site_no, Date) %>%
  summarise(
    Flow       = mean(Flow,       na.rm = TRUE),
    `Temp (C)` = mean(`Temp (C)`, na.rm = TRUE),
    `pH (mean)`= mean(`pH (mean)`,na.rm = TRUE),
    .groups    = "drop"
  )

  # UT data
UTraw <- read.csv(
  "https://raw.githubusercontent.com/hvelicer/ESS330_finalproject/main/UTdata_protected.csv",
  stringsAsFactors = FALSE
)

DailypW_UTpro <- UTraw %>%
  mutate(Date = mdy(Date)) %>% 
  mutate(across(
    c(Temp..max., Temp..min., `pH..max.`, `pH..min.`),
    ~ as.numeric(.)
  )) %>%
  mutate(
    Temp_mean = rowMeans(select(., Temp..max.,  Temp..min.), na.rm = TRUE),
    pH_mean   = rowMeans(select(., pH..max.,     pH..min.),    na.rm = TRUE)
  ) %>%
  group_by(site_no, Date) %>%
  summarise(
    Flow       = mean(Discharge..mean., na.rm = TRUE),
    `Temp (C)` = mean(Temp_mean,        na.rm = TRUE),
    `pH (mean)`= mean(pH_mean,          na.rm = TRUE),
    .groups    = "drop"
  )

UTdata_protected <- DailypW_UTpro %>%
  mutate(Date = yearmonth(Date)) %>%
  group_by(site_no, Date) %>%
  summarise(
    Flow       = mean(Flow,       na.rm = TRUE),
    `Temp (C)` = mean(`Temp (C)`, na.rm = TRUE),
    `pH (mean)`= mean(`pH (mean)`,na.rm = TRUE),
    .groups    = "drop"
  )
```

```{r}
head(COdata_protected1)
head(COdata_protected2)
head(CAdata_protected)
head(AZdata_protected)
head(UTdata_protected)
```


```{r}
# 1) bind & tag
unprotected_all <- bind_rows(
  COdata_unprotected1 %>% mutate(site_no = as.character(site_no)),
  COdata_unprotected2 %>% mutate(site_no = as.character(site_no)),
  CAdata_unprotected   %>% mutate(site_no = as.character(site_no)),
  AZdata_unprotected   %>% mutate(site_no = as.character(site_no)),
  UTdata_unprotected   %>% mutate(site_no = as.character(site_no))
) %>%
  mutate(protection = "Unprotected")

protected_all <- bind_rows(
  COdata_protected1 %>% mutate(site_no = as.character(site_no)),
  COdata_protected2 %>% mutate(site_no = as.character(site_no)),
  CAdata_protected  %>% mutate(site_no = as.character(site_no)),
  AZdata_protected  %>% mutate(site_no = as.character(site_no)),
  UTdata_protected  %>% mutate(site_no = as.character(site_no))
) %>%
  mutate(protection = "Protected")

# 2) factorize **after** sub‐setting (so you only get the levels you actually have)
unprotected_all <- unprotected_all %>% mutate(site_no = factor(site_no))
protected_all   <- protected_all   %>% mutate(site_no = factor(site_no))

# 3) helper
make_panel <- function(df, yvar, title) {
  ggplot(df, aes(x = Date, y = .data[[yvar]], colour = site_no)) +
    geom_line(size = 0.3,   na.rm = TRUE) +
    geom_point(size = 0.8,  na.rm = TRUE) +
    labs(title = title, x = NULL, y = NULL, colour = "Site") +
    theme_minimal()
}

# 4) build
p_flow_un <- make_panel(unprotected_all, "Flow",      "Unprotected Flow")
ggplotly(p_flow_un)
p_temp_un <- make_panel(unprotected_all, "Temp (C)",  "Unprotected Temp (C)")
ggplotly(p_temp_un)
p_ph_un   <- make_panel(unprotected_all, "pH (mean)", "Unprotected pH (mean)")
ggplotly(p_ph_un)

p_flow_pr <- make_panel(protected_all,   "Flow",      "Protected Flow")
ggplotly(p_flow_pr)
p_temp_pr <- make_panel(protected_all,   "Temp (C)",  "Protected Temp (C)")
ggplotly(p_temp_pr)
p_ph_pr   <- make_panel(protected_all,   "pH (mean)", "Protected pH (mean)")
ggplotly(p_ph_pr)

# 5) stack
Yearly_un <- ggarrange(
  p_flow_un, p_temp_un, p_ph_un,
  ncol = 1, nrow = 3,
  common.legend = TRUE, legend = "bottom"
)

Yearly_pr <- ggarrange(
  p_flow_pr, p_temp_pr, p_ph_pr,
  ncol = 1, nrow = 3,
  common.legend = TRUE, legend = "bottom"
)

Yearly_both <- ggarrange(
  Yearly_un, Yearly_pr,
  ncol   = 2, widths = c(1,1),
  label.x = c(0.05, 0.55),
  label.y = 1.02
)

print(Yearly_both)
```

```{r}
# Looking at seasonal data
library(tsibble)
library(feasts)
library(plotly)

# turn your data into a tsibble
ts_unprotected <- unprotected_all %>%
  as_tsibble(key = site_no, index = Date)
ts_protected <- protected_all %>% 
  as_tsibble(key = site_no, index = Date)

# 1) Unprotected
p_sub_flow_un <- ts_unprotected %>% 
  gg_subseries(Flow) +
  labs(title="Unprotected Flow Subseries")
p_sub_temp_un <- ts_unprotected %>% 
  gg_subseries(`Temp (C)`) +
  labs(title="Unprotected Temp (C) Subseries")
p_sub_ph_un <- ts_unprotected %>% 
  gg_subseries(`pH (mean)`) +
  labs(title="Unprotected pH (mean) Subseries")

# 2) Protected 
p_sub_flow_pr <- ts_protected %>% 
  gg_subseries(Flow) +
  labs(title="Protected Flow Subseries")
p_sub_temp_pr <- ts_protected %>% 
  gg_subseries(`Temp (C)`) +
  labs(title="Protected Temp (C) Subseries")
p_sub_ph_pr <- ts_protected %>% 
  gg_subseries(`pH (mean)`) +
  labs(title="Protected pH (mean) Subseries")

ggplotly(p_sub_flow_un)
ggplotly(p_sub_temp_un)
ggplotly(p_sub_ph_un)
ggplotly(p_sub_flow_pr)
ggplotly(p_sub_temp_pr)
ggplotly(p_sub_ph_pr)
```

